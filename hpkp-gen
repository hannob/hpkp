#!/bin/bash
#
# HTTP Public Key Pinning header pin generator
# by Hanno BÃ¶ck, https://hboeck.de
# License: CC0 (public domain)
#
# https://tools.ietf.org/html/draft-ietf-websec-key-pinning-20

if [ "$1" = "" ]; then
	echo "HKP header generator according to"
	echo "http://tools.ietf.org/html/draft-ietf-websec-key-pinning-20"
	echo ""
	echo "Usage: $0 [files]"
	echo ""
	echo "[files] should contain at least 2 files and can be of type"
	echo ".crt (certificate), .csr (certificate request) or"
	echo ".key (private key)"
	exit 1
fi

head="Public-Key-Pins: max-age=5184000;"

c=0
for f in "$@"; do
	pubkeyfile=`mktemp -t hpkp`
	if [ "${f: -4}" = ".crt" ]; then
		openssl x509 -pubkey -noout -in $f | openssl asn1parse -inform pem -noout -out $pubkeyfile
	elif [ "${f: -4}" = ".csr" ]; then
		openssl req -pubkey -noout -in $f | openssl asn1parse -inform pem -noout -out $pubkeyfile
	elif [ "${f: -4}" = ".key" ]; then
		openssl pkey -in $f -pubout | openssl asn1parse -inform pem -noout -out $pubkeyfile
	else
		echo "$f is not a valid file format"
		exit -1
	fi
	let c+=1
	phash=`openssl dgst -sha256 -binary $pubkeyfile | base64`
	head="${head} pin-sha256=\"$phash\";"
	rm $pubkeyfile
done

[ $c -eq 1 ] && echo "Warning: HKP requires at least 2 keys" >&2
echo $head

